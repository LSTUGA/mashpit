#!/usr/bin/env python3

import os.path
import subprocess
from create_db import create_connection


# Download the assembly according to the sra database
def skesa_assembly_download(SRR):
    try:
        subprocess.check_call(
            "dump-ref-fasta http://sra-download.ncbi.nlm.nih.gov/srapub_files/" + SRR + "_" + SRR + ".realign > " + SRR
            + "_skesa.fa", shell=True)
        print("Downloaded assembly for " + SRR)
    except subprocess.CalledProcessError:
        print("can't download skesa assembly for " + SRR)
        return


def skech_assembly(SRR):
    try:
        subprocess.check_call("mash sketch " + SRR + "_skesa.fa", shell=True)
        info = {"sketchid": None, "biosample_acc": None, "srr": SRR, "path": SRR + "_skesa.fa.msh", "source": "NCBI",
                "software": "mash", "seed": 42}
    except subprocess.CalledProcessError:
        print("no assembly found for" + SRR)
    return info


def select_by_srr(conn, srr):
    c = conn.cursor()
    cursor = c.execute("SELECT biosample_acc FROM SRA WHERE srr=?", (srr,))
    return cursor.fetchone()[0]


def insert_sketch(conn, info):
    sql = ''' INSERT INTO SKETCH(sketchid,biosample_acc,srr,path,source,software,seed)
              VALUES(?,?,?,?,?,?,?) '''
    cur = conn.cursor()
    cur.execute(sql, info)
    return cur.lastrowid


def main():
    conn = create_connection('mashpit.db')
    c = conn.cursor()
    cursor = c.execute("SELECT srr from sra")

    # get the assembly
    for row in cursor:
        if os.path.exists(row[0] + "_skesa.fa"):
            print("assembly already exists.")
            continue
        else:
            skesa_assembly_download(row[0])

    # delete all the empty assembly generated by error
    subprocess.check_call("find ./ -empty -type f -delete", shell=True)

    # insert the info into the database
    cursor = c.execute("SELECT srr from sra")
    for row in cursor:
        if os.path.exists(row[0] + "_skesa.fa"):
            info = skech_assembly(row[0])
            info["biosample_acc"] = select_by_srr(conn, row[0])
            info_list = list(info.values())
            print(info_list)
            insert_sketch(conn, info_list)
            conn.commit()
        else:
            print("No assembly")
            continue

    conn.close()


if __name__ == '__main__':
    main()

